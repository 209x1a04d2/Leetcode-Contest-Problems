class Solution {
    public int adj(String s,int i){
        int n=s.length(),f1=-1,f2=-1;
        if(s.charAt(i)-s.charAt(i-1) == 0 || s.charAt(i)-s.charAt(i-1) == 1 || s.charAt(i)-s.charAt(i-1) == -1)
            f1++;
        if((i+1 < n) && (s.charAt(i)-s.charAt(i+1) == 0 || s.charAt(i)-s.charAt(i+1) == 1 || s.charAt(i)-s.charAt(i+1) == -1))
            f2++;
        if(f1==0 && f2==0) return 2; //both adj
        if(f1==-1 && f2==-1) return 0; //not adj
        if(f1 == 0) return 1; //left adj
        if(f2==0) return 3; //right adj
        return 0;
        
    }
    public int removeAlmostEqualCharacters(String word) {
        //System.out.println(word.charAt(1)-word.charAt(0));
        int count = 0,n = word.length(),i=1;
        if(n==1)return 0;
        if(n==2){
            if(adj(word,1) == 1){
                return 1;
            }else {
                return 0;
            }
        }
        int flag = -1;
        while(i<n-1){
            if(adj(word,i) == 2){
                count++;
                i+=2;
            }
            else if(adj(word,i)==1){
                count++;
                i+=2;
            }
            else if(adj(word,i) == 3) {
                i++;
                flag = 1;
            }
            else{
                i+=2;
            }
        }
        if(i==n-1){
            if(adj(word,n-1)==1)
            count++;
        }
        return count;
    }
}
